{"version":3,"sources":["./src/app/modals/create-announcement/components/create-announcement.ts","./src/app/modals/create-announcement/components/create-announcement.html","./src/app/modules/announcement/announcment-routing.module.ts","./src/app/modules/announcement/announcment.module.ts","./src/app/modules/announcement/components/announcment.component.ts","./src/app/modules/announcement/components/announcment.component.html","./src/app/shared/services/announcement.service.ts"],"names":[],"mappings":"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","file":"src_app_modules_announcement_announcment_module_ts.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n// import { User } from 'src/app/models/user';\r\n// import { announcementService } from 'src/app/shared/services/announcement.service';\r\n// import { UserService } from 'src/app/shared/services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-create-announcment',\r\n  templateUrl: './create-announcement.html',\r\n  styleUrls: ['./create-announcement.scss']\r\n})\r\nexport class CreateAnnouncementComponent implements OnInit {\r\n\r\n  // user: User;\r\n  annoucementForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private activeModal: NgbActiveModal,\r\n    // private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.getUser();\r\n    // delete owner and date\r\n    this.annoucementForm = this.fb.group({\r\n      title:       ['', [Validators.minLength(5), Validators.required]],\r\n      description: ['', [Validators.minLength(5), Validators.required]],\r\n      address:     ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  // getUser() {\r\n  //   this.userService.userInfo$.subscribe(user => this.user = user);\r\n  // }\r\n\r\n  addAnnouncement() {\r\n    console.log(this.annoucementForm.value);\r\n    this.activeModal.close(this.annoucementForm.value);\r\n  }\r\n\r\n  close(): void {\r\n    this.activeModal.close();\r\n  }\r\n  \r\n}\r\n","<form [formGroup]=\"annoucementForm\" (ngSubmit)=\"addAnnouncement()\" class=\"m-5\">\r\n  <h1 class=\"mb-4\">Create announcement</h1>\r\n  <div class=\"form-group mb-3\">\r\n    <label for=\"title\">Email address</label>\r\n    <input type=\"text\" formControlName=\"title\" class=\"form-control\" placeholder=\"Enter title\">\r\n  </div>\r\n  <div class=\"form-group mb-4\">\r\n    <label for=\"description\">Email address</label>\r\n    <textarea formControlName=\"description\"  cols=\"20\" rows=\"5\" class=\"form-control\" placeholder=\"Enter description...\"></textarea>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary w-100\">Promise</button>\r\n</form>\r\n<img src=\"/assets/images/icons/close_black_24dp.svg\" class=\"cancel\" (click)=\"close()\">\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AnnouncmentComponent } from './components/announcment.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AnnouncmentComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AnnouncmentRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AnnouncmentRoutingModule } from './announcment-routing.module';\r\nimport { AnnouncmentComponent } from './components/announcment.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';  \r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';   \r\nimport { CreateAnnouncementComponent } from 'src/app/modals/create-announcement/components/create-announcement';\r\nimport localeRu from '@angular/common/locales/ru';\r\n\r\nregisterLocaleData(localeRu, 'ru');\r\n\r\n@NgModule({\r\n  declarations: [AnnouncmentComponent,CreateAnnouncementComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AnnouncmentRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule\r\n  ]\r\n})\r\nexport class AnnouncmentModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { CreateAnnouncementComponent } from 'src/app/modals/create-announcement/components/create-announcement';\r\nimport { Announcement } from 'src/app/models/announcements';\r\nimport { announcementService } from 'src/app/shared/services/announcement.service';\r\nimport { UserService } from 'src/app/shared/services/users.service';\r\nimport { AuthService } from '../../auth/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-announcment',\r\n  templateUrl: './announcment.component.html',\r\n  styleUrls: ['./announcment.component.scss']\r\n})\r\nexport class AnnouncmentComponent implements OnInit {\r\n\r\n  announcements: Announcement;\r\n  // searchProject: FormControl = new FormControl('');\r\n  term: any;\r\n  p: number = 1;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private announcementService: announcementService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAnnouncement();\r\n  }\r\n\r\n  getAnnouncement() {\r\n    this.announcementService.getOne(this.userService.userId).subscribe(announcement => this.announcements = announcement);\r\n  }\r\n\r\n  createAnnouncement(): void {\r\n    const modalRef = this.modalService.open(CreateAnnouncementComponent, { centered: true });\r\n    modalRef.closed.pipe(\r\n      switchMap(announcement => this.announcementService.createOne(announcement))\r\n    ).subscribe(() =>\r\n      this.getAnnouncement()\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"m-5\">\r\n  <!-- Search -->\r\n  <div class=\"col-xl-4 col-6\">\r\n    <div class=\"mb-5 input-group input-group-merge\">\r\n      <input type=\"search\" class=\"form-control col-6\" [(ngModel)]=\"term\" placeholder=\"Search project\">\r\n      <div class=\"input-group-append\">\r\n        <span class=\"input-group-text\">\r\n          <img src=\"/assets/images/icons/search_black_24dp.svg\" alt=\"search\" class=\"svg\">\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <h2 class=\"mb-5\">All Announcment</h2>\r\n  <!-- Cards -->\r\n  <div *ngIf=\"announcements\" class=\"row flex-wrap card-deck\">\r\n    <div *ngFor=\"let annoucement of announcements | filter: term | paginate: { itemsPerPage: 3, currentPage: p }\"\r\n      class=\"col-12 col-lg-6 col-xl-4 mb-3 d-flex align-items-stretch full_card\">\r\n      <div class=\"card w-100\">\r\n        <div class=\"card-body d-flex body\">\r\n          <!-- first half of the card -->\r\n          <div class=\"d-flex flex-column col-9\">\r\n            <div class=\"d-flex mb-2 image\">\r\n              <img src=\"/assets/user.jpg\" alt=\"image\" class=\"me-2\">\r\n              <div>\r\n                <div>{{annoucement?.title}}</div>\r\n                <div>by {{annoucement.user?.firstName}} {{annoucement.user?.lastName}}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"description\">\r\n              {{annoucement?.description}}\r\n            </div>\r\n          </div>\r\n          <!-- second half of the card -->\r\n          <div class=\"d-flex flex-column justify-content-between col-3 second__card\">\r\n            <div class=\"d-flex word-wrap svg\">\r\n              <img src=\"/assets/images/icons/today_black_24dp.svg\" alt=\"date\" class=\"svg me-1\">\r\n              <div>{{annoucement?.date | date:\"yyyy.MM.dd\"}} </div>\r\n            </div>\r\n            <div class=\"d-flex word-wrap svg\">\r\n              <img src=\"/assets/images/icons/location_on_black_24dp.svg\" alt=\"date\" class=\"svg me-1\">\r\n              <div>{{annoucement?.address}}</div>\r\n            </div>\r\n            <div class=\"d-flex word-wrap svg\">\r\n              <img src=\"/assets/images/icons/favorite_border_black_24dp.svg\" alt=\"date\" class=\"svg me-1\">\r\n              <div>{{annoucement?.participantsCap}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!--  -->\r\n  <div class=\"d-flex justify-content-between\">\r\n    <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n    <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"createAnnouncement()\">Create Announcement</button>\r\n  </div>\r\n\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Announcement } from 'src/app/models/announcements';\r\nimport { AbstractCrudService } from '../abstracts/abstract-crud.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class announcementService extends AbstractCrudService<Announcement>{\r\n\r\n  path = 'announcement/all';\r\n\r\n  constructor(protected http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}