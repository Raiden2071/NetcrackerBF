{"version":3,"sources":["./node_modules/js-sha256/src/sha256.js","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/components/login/login.component.ts","./src/app/modules/auth/components/login/login.component.html","./src/app/modules/auth/components/register/register.component.ts","./src/app/modules/auth/components/register/register.component.html"],"names":[],"mappings":";;;;;;;;AAAA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kDAAkD,QAAa;AAC/D,YAAY,KAA4B,IAAI,wBAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA,OAAO;AACP,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AA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","file":"src_app_modules_auth_auth_module_ts.js","sourcesContent":["/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RecoveryComponent } from './components/recovery/recovery.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'recovery', component: RecoveryComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RecoveryComponent } from './components/recovery/recovery.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    RecoveryComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [NgbActiveModal]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { sha256 } from 'js-sha256';\r\nimport { UserService } from 'src/app/shared/services/users.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  showPassword = false;\r\n  showErrors = false;\r\n\r\n  loginForm: FormGroup = this.fb.group({\r\n    email:    ['', [Validators.email, Validators.required]],\r\n    password: ['', [Validators.minLength(8), Validators.required]],\r\n    remember: [true]\r\n  });\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private userService: UserService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm.valueChanges.subscribe(() => this.showErrors = false);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if(this.loginForm.valid) {\r\n      //sha256\r\n      const data = {\r\n        email:    this.loginForm.value.email,\r\n        password: (this.loginForm.value.password),\r\n        remember: this.loginForm.value.remember\r\n      };\r\n      this.authService.login(data, data.remember).subscribe((userData) => {\r\n        this.userService.userId = userData.user.id;\r\n        this.router.navigateByUrl('/profile')\r\n      },err => {\r\n        this.showErrors = true;\r\n      });\r\n    }\r\n    else {\r\n      this.showErrors = true;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<!--  -->\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"modal-dialog modal-dialog-centered\">\r\n  <div class=\"modal-content p-4\">\r\n    <div class=\"modal-body custom_body\">\r\n      <p class=\"h3 mb-4 text-center\">Вход</p>\r\n      <!-- Email -->\r\n      <div>\r\n        <div class=\"d-flex mb-2 flex-column\">\r\n          <label [class.text-danger]=\"showErrors\">Email</label>\r\n          <div *ngIf=\"showErrors\" class=\"text-danger\">Неправильно введены данные</div>\r\n        </div>\r\n        <input type=\"login\" class=\"form-control mb-4\" placeholder=\"Email\" formControlName=\"email\"\r\n          [class.border-danger]=\"showErrors\">\r\n      </div>\r\n      <!-- Password -->\r\n      <label class=\"mb-2\" [class.text-danger]=\"showErrors\">Password</label>\r\n      <div class=\"input-group input-group-merge pass rounded mb-3\"\r\n        [class.border-danger]=\"(loginForm.controls.password?.errors || loginForm.controls.confirmPassword?.errors) || showErrors\">\r\n        <input [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"password\" class=\"form-control pass\"\r\n          placeholder=\"Пароль\"\r\n          [class.border-danger]=\"showErrors\">\r\n        <!-- <div class=\"input-group-append\">\r\n          <span class=\"input-group-text\">\r\n            <i id=\"eye\" (click)=\"onEyeClick()\" [class]=\"showPassword ? 'fa fa-eye-slash' : 'fa fa-eye'\"\r\n              aria-hidden=\"true\"></i>\r\n          </span>\r\n        </div> -->\r\n      </div>\r\n      <!-- Remember me and Forgot password-->\r\n      <div class=\"d-flex justify-content-between mb-4\">\r\n        <div class=\"mr-2\">\r\n          <input type=\"checkbox\" formControlName=\"remember\">\r\n          Запомнить меня\r\n        </div>\r\n        <div class=\"pointer\">\r\n          <a routerLink=\"/auth/recovery\">Забыли пароль?</a>\r\n        </div>\r\n      </div>\r\n      <!-- Sign in button -->\r\n      <div class=\"mb-4\">\r\n        <button type=\"submit\" class=\"btn btn-primary w-100\">Войти</button>\r\n      </div>\r\n      <!-- Register -->\r\n      <div class=\"border-top d-flex justify-content-center\">\r\n        <div class=\"mt-3 pe-auto\">Еще не <a class=\"font-bold pointer\" routerLink=\"/auth/register\">зарегистрировались?</a></div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { sha256 } from 'js-sha256';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { MustMatch } from '../../validators/must-match.validator';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  showPassword = false;\r\n  showErrors = false;\r\n  \r\n  registerForm: FormGroup = this.fb.group({\r\n    firstName:        ['', [Validators.required]],\r\n    lastName:         ['', [Validators.required]],\r\n    email:            ['', [Validators.email, Validators.required]],\r\n    password:         ['', [Validators.minLength(5) ,Validators.required]],\r\n    confirmPassword:  ['', [Validators.required]]\r\n  }, {\r\n    validator:  MustMatch('password', 'confirmPassword')\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {        \r\n    this.registerForm.valueChanges.subscribe(() => this.showErrors = false);\r\n  }\r\n  \r\n  onSubmit(): void {\r\n    if(this.registerForm.valid) {\r\n      const data = {\r\n        firstName:        this.registerForm.value.firstName,\r\n        lastName:         this.registerForm.value.lastName,    \r\n        email:            this.registerForm.value.email,    \r\n        password:         sha256(this.registerForm.value.password),\r\n        confirmPassword:  sha256(this.registerForm.value.confirmPassword)\r\n      };            \r\n      this.authService.register(data).subscribe(data => console.log(data));\r\n      this.router.navigateByUrl('/auth/login');\r\n    }\r\n    else {\r\n      this.showErrors = true;\r\n      console.log('not valid');\r\n    }\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"modal-dialog modal-dialog-centered\">\r\n  <div class=\"modal-content p-4\">\r\n    <div class=\"modal-body custom_body\">\r\n      <p class=\"h3 text-center pb-4\">Регистрация</p>\r\n\r\n      <!-- First name -->\r\n      <div class=\"d-flex justify-content-between\">\r\n        <div class=\"form-group mr-3 mb-3\">\r\n          <label class=\"mb-2\" [class.text-danger]=\"showErrors\">Имя</label>\r\n          <input type=\"text\" class=\"form-control text-dark\" placeholder=\"Имя\" formControlName=\"firstName\"\r\n            [class.border-danger]=\"showErrors\">\r\n        </div>\r\n        <!-- Last name -->\r\n        <div class=\"form-group mb-3\">\r\n          <label class=\"mb-2\" [class.text-danger]=\"showErrors\">Фамилия</label>\r\n          <input type=\"text\" class=\"form-control text-dark\" placeholder=\"Фамилия\" formControlName=\"lastName\"\r\n            [class.border-danger]=\"showErrors\">\r\n        </div>\r\n      </div>\r\n      <!-- E-mail -->\r\n      <div class=\"form-group mb-3\">\r\n        <label class=\"mb-2\" [class.text-danger]=\"showErrors\">Email</label>\r\n        <input type=\"email\" class=\"form-control text-dark\" placeholder=\"Email\" formControlName=\"email\" \r\n          [class.border-danger]=\"showErrors\">\r\n      </div>\r\n      <!-- Password -->\r\n      <div class=\"form-group\">\r\n        <div>\r\n          <label class=\"mb-2\"\r\n            [class.text-danger]=\"(registerForm.controls.password?.errors || registerForm.controls.confirmPassword?.errors) && showErrors\">Пароль</label>\r\n          <span class=\"text-sm text-danger\"\r\n            *ngIf=\"(registerForm.controls.password?.errors || registerForm.controls.confirmPassword?.errors) && showErrors\">\r\n            (минимально 8 символов)</span>\r\n        </div>\r\n        <div class=\"input-group input-group-merge pass rounded mb-3\"\r\n          [class.border-danger]=\"(registerForm.controls.password?.errors || registerForm.controls.confirmPassword?.errors) && showErrors\">\r\n          <input [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"password\" class=\"form-control pass\"\r\n            placeholder=\"Пароль\"\r\n            [class.border-danger]=\"showErrors\">\r\n          <!-- <div class=\"input-group-append\">\r\n            <span class=\"input-group-text\">\r\n              <i id=\"eye\" (click)=\"onEyeClick()\" [class]=\"showPassword ? 'fa fa-eye-slash' : 'fa fa-eye'\"\r\n                aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div> -->\r\n        </div>\r\n        <!-- Confirm password -->\r\n        <div class=\"mb-4\">\r\n          <label class=\"mb-2\"\r\n            [class.text-danger]=\"(registerForm.controls.password?.errors || registerForm.controls.confirmPassword?.errors) && showErrors\">Подтвердить\r\n            пароль</label>\r\n          <div class=\"input-group input-group-merge pass rounded\"\r\n            [class.border-danger]=\"(registerForm.controls.password?.errors || registerForm.controls.confirmPassword?.errors) && showErrors\">\r\n            <input [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"confirmPassword\" class=\"form-control pass\"\r\n              placeholder=\"Подтвердить пароль\"\r\n              [class.border-danger]=\"showErrors\">\r\n          </div>\r\n          <span *ngIf=\"registerForm.controls.confirmPassword.errors?.mustMatch && showErrors;\" class=\" text-danger text-sm\">\r\n            Пароли не совпадают\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <!-- Sign up button -->\r\n      <button class=\"mb-4 mt-3 btn btn-primary w-100\" type=\"submit\">Зарегистрироваться</button>\r\n      <div class=\"border-top\">\r\n        <div class=\"mt-3 d-flex justify-content-center\">\r\n          <p><a class=\"font-bold\" routerLink=\"/auth/login\">Войти </a>\r\n            в существующий аккаунт</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>"],"sourceRoot":"webpack:///"}
