{"version":3,"sources":["./src/app/modules/quiz/components/create-quiz-title/create-quiz-title.component.ts","./src/app/modules/quiz/components/create-quiz-title/create-quiz-title.component.html","./src/app/modules/quiz/components/quiz/quiz.component.html","./src/app/modules/quiz/components/quiz/quiz.component.ts","./src/app/modules/quiz/quiz-routing.module.ts","./src/app/modules/quiz/quiz.module.ts","./src/app/shared/services/quiz.service.ts"],"names":[],"mappings":"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","file":"src_app_modules_quiz_quiz_module_ts.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { QuizType } from 'src/app/models/quiz';\r\n\r\n@Component({\r\n  selector: 'app-create-quiz-title',\r\n  templateUrl: './create-quiz-title.component.html',\r\n  styleUrls: ['./create-quiz-title.component.scss']\r\n})\r\nexport class CreateQuizTitleComponent implements OnInit {\r\n\r\n  quizTypes = QuizType;\r\n\r\n  createQuizForm: FormGroup = this.fb.group({\r\n    title:       ['', [Validators.required]],\r\n    quizType:    [this.quizTypes.HISTORIC, [Validators.required]],\r\n    description: ['', [Validators.required]],\r\n    // authorId: [this.user]\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {    \r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.router.navigate(['/quiz/quiz-questions', {data: JSON.stringify(this.createQuizForm.value)}])\r\n  }\r\n\r\n}\r\n","<!-- ngModel почитай про формы и поменяй! -->\r\n<!--   -->\r\n<form [formGroup]=\"createQuizForm\" (ngSubmit)=\"onSubmit()\" class=\"m-5\">\r\n  <h1 class=\"mb-4 text-center\">Create quiz</h1>\r\n  <div class=\"d-flex justify-content-between\">\r\n    <!-- forms + inputs -->\r\n    <div>\r\n      <!-- title -->\r\n      <div class=\"d-flex mb-4\">\r\n        <span class=\"h4 text__input me-4\">\r\n          Title\r\n        </span>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"title\">\r\n      </div>\r\n      <!-- quizType -->\r\n      <div class=\"d-flex mb-4\">\r\n        <span class=\"h4 text__input me-4\">\r\n          Quiz type\r\n        </span>\r\n        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"quizType\"> -->\r\n        <select class=\"w-50\" formControlName=\"quizType\">\r\n          <option *ngFor=\"let exampleQuiz of quizTypes | keyvalue\">\r\n            {{ exampleQuiz.value }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <!-- Description -->\r\n      <div class=\"d-flex mb-4\">\r\n        <span class=\"h4 text__input me-4\">\r\n          Description\r\n        </span>\r\n        <textarea class=\"form-control\" cols=\"50\" rows=\"5\" formControlName=\"description\"></textarea>\r\n      </div>\r\n      <!--  -->\r\n      <!-- <div class=\"d-flex mb-4\">\r\n        <span class=\"text__input me-4\">\r\n        </span>\r\n        <span>Enter personal information about you. This information will appear on your public profile.</span>\r\n      </div> -->\r\n      <!-- button -->\r\n      <div class=\"d-flex\">\r\n        <span class=\"text__input me-4\"></span>\r\n        <button type=\"submit\" class=\"btn btn-outline-primary w-25\">Next</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n\r\n\r\n<!-- [class.border-danger]=\"ownerForm.controls.name?.errors && showErrors\" -->\r\n","\r\n<div class=\"m-5\">\r\n  <!-- Search -->\r\n  <div class=\"col-xl-4 col-6\">\r\n    <div class=\"mb-5 input-group input-group-merge\">\r\n      <input type=\"search\" class=\"form-control col-6\" [(ngModel)]=\"term\" placeholder=\"Search project\">\r\n      <div class=\"input-group-append\">\r\n        <span class=\"input-group-text\">\r\n          <img src=\"/assets/images/icons/search_black_24dp.svg\" alt=\"search\" class=\"svg\">\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <h2 class=\"mb-5\">All Quizzes</h2>  \r\n  <!-- Cards -->\r\n  <div class=\"row flex-wrap card-deck\">\r\n    <div *ngFor=\"let quiz of quizzes | filter: term | paginate: { itemsPerPage: 12, currentPage: p }\" class=\"col-12 col-xl-3 col-lg-4 col-md-6 mb-3 d-flex align-items-stretch\">\r\n      <div class=\"card w-100 p-4\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title text-center\">{{quiz.title}} </h5>\r\n          <p class=\"card-text\">-{{quiz.quizType}} </p>\r\n          <p class=\"card-text description\"><small class=\"text-muted\">{{quiz.description}} </small></p>\r\n        </div>\r\n        <div class=\"text-end\">\r\n          <p>\r\n            <img src=\"/assets/images/icons/cup_black_24dp.svg\">\r\n            12 Best result \r\n          </p>\r\n          <button class=\"btn btn-outline-primary w-100\">Play</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!--  -->\r\n  <div class=\"d-flex justify-content-between\">\r\n    <pagination-controls  (pageChange)=\"p = $event\"></pagination-controls>\r\n    <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"createQuiz()\">Create Quiz</button>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Quiz } from 'src/app/models/quiz';\r\nimport { quizService } from 'src/app/shared/services/quiz.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: ['./quiz.component.scss']\r\n})\r\nexport class QuizComponent implements OnInit {\r\n\r\n  quizzes: Quiz[];\r\n  // searchProject: FormControl = new FormControl('');\r\n  term: any;\r\n  p: number = 1;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private quizService: quizService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuizzes();\r\n  }\r\n\r\n  getQuizzes() {\r\n    this.quizService.getList().subscribe(quiz => this.quizzes = quiz);\r\n  }\r\n\r\n  createQuiz(): void {\r\n    this.router.navigateByUrl('quiz/create-quiz');\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CreateQuizTitleComponent } from './components/create-quiz-title/create-quiz-title.component';\r\nimport { QuizComponent } from './components/quiz/quiz.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: QuizComponent },\r\n  { path: 'create-quiz', component: CreateQuizTitleComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class QuizRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { QuizRoutingModule } from './quiz-routing.module';\r\nimport { QuizComponent } from './components/quiz/quiz.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';  \r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';   \r\nimport localeRu from '@angular/common/locales/ru';\r\nimport { CreateQuizTitleComponent } from './components/create-quiz-title/create-quiz-title.component';\r\nimport { QuizQuestionsComponent } from './components/quiz-questions/quiz-questions.component';\r\n\r\nregisterLocaleData(localeRu, 'ru');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    QuizComponent,\r\n    CreateQuizTitleComponent,\r\n    QuizQuestionsComponent\r\n    ],\r\n  imports: [\r\n    CommonModule,\r\n    QuizRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule\r\n  ]\r\n})\r\nexport class QuizModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Quiz } from 'src/app/models/quiz';\r\nimport { AbstractCrudService } from '../abstracts/abstract-crud.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class quizService extends AbstractCrudService<Quiz>{\r\n\r\n  path = 'quiz/';\r\n\r\n  constructor(protected http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}