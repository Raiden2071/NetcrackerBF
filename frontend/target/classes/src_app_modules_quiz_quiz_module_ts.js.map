{"version":3,"sources":["./src/app/modules/quiz/components/quiz.component.html","./src/app/modules/quiz/components/quiz.component.ts","./src/app/modules/quiz/quiz-routing.module.ts","./src/app/modules/quiz/quiz.module.ts"],"names":[],"mappings":"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","file":"src_app_modules_quiz_quiz_module_ts.js","sourcesContent":["\r\n<div class=\"m-5\">\r\n  <!-- Search -->\r\n  <div class=\"col-xl-4 col-6\">\r\n    <div class=\"mb-5 input-group input-group-merge\">\r\n      <input type=\"search\" class=\"form-control col-6\" [(ngModel)]=\"term\" placeholder=\"Search project\">\r\n      <div class=\"input-group-append\">\r\n        <span class=\"input-group-text\">\r\n          <img src=\"/assets/images/icons/search_black_24dp.svg\" alt=\"search\" class=\"svg\">\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <h2>All Quizzes</h2>\r\n  <!-- Cards -->\r\n  <div class=\"row flex-wrap card-deck\">\r\n    <div *ngFor=\"let quiz of quizzes | filter: term | paginate: { itemsPerPage: 12, currentPage: p }\" class=\"col-12 col-xl-3 col-lg-4 col-md-6 mb-3 d-flex align-items-stretch\">\r\n      <div class=\"card w-100 p-4\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title text-center\">{{quiz.title}} </h5>\r\n          <p class=\"card-text\">-{{quiz.quizType}} </p>\r\n          <p class=\"card-text description\"><small class=\"text-muted\">{{quiz.description}} </small></p>\r\n        </div>\r\n        <div class=\"text-end\">\r\n          <p>\r\n            <img src=\"/assets/images/icons/cup_black_24dp.svg\">\r\n            12 Best result \r\n          </p>\r\n          <button class=\"btn btn-outline-primary w-100\">Play</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n  <div class=\"d-flex justify-content-between\">\r\n    <pagination-controls  (pageChange)=\"p = $event\"></pagination-controls>\r\n    <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"createQuiz()\">Create Announcement</button>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Quiz } from 'src/app/models/quiz';\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: ['./quiz.component.scss']\r\n})\r\nexport class QuizComponent implements OnInit {\r\n\r\n  quizzes: Quiz[];\r\n  // searchProject: FormControl = new FormControl('');\r\n  term: any;\r\n  p: number = 1;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    // private quizService: quizService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    (this.quizzes as any) = [\r\n      {\r\n    quizId: 0,\r\n    title: 'Title',\r\n    description: 'scriptiondescriptscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptioniondescription',\r\n    quizType: 'Quiz type',\r\n    creationDate: Date,\r\n    authorId: 12,\r\n    questions: [\r\n      {\r\n        questionId: 12,\r\n        questionText: 'questionText', \t// текст вопроса\r\n        questionType: 'history',\r\n        answers: [\r\n          {\r\n            answerId: 12,\r\n            value: 'text of answer',  // текст ответа\r\n            answer: true,\r\n            questionId: 12\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    quizId: 0,\r\n    title: 'Title',\r\n    description: 'scriptiondescriptscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptionscriptiondescriptiondescriptioniondescription',\r\n    quizType: 'Quiz type',\r\n    creationDate: Date,\r\n    authorId: 12,\r\n    questions: [\r\n      {\r\n        questionId: 12,\r\n        questionText: 'questionText', \t// текст вопроса\r\n        questionType: 'history',\r\n        answers: [\r\n          {\r\n            answerId: 12,\r\n            value: 'text of answer',  // текст ответа\r\n            answer: true,\r\n            questionId: 12\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    quizId: 0,\r\n    title: 'Title',\r\n    description: 'description',\r\n    quizType: 12,\r\n    creationDate: Date,\r\n    authorId: 12,\r\n    questions: [\r\n      {\r\n        questionId: 12,\r\n        questionText: 'questionText', \t// текст вопроса\r\n        questionType: 12,\r\n        answers: [\r\n          {\r\n            answerId: 12,\r\n            value: 'text of answer',  // текст ответа\r\n            answer: true,\r\n            questionId: 12\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    quizId: 0,\r\n    title: 'Title',\r\n    description: 'description',\r\n    quizType: 12,\r\n    creationDate: Date,\r\n    authorId: 12,\r\n    questions: [\r\n      {\r\n        questionId: 12,\r\n        questionText: 'questionText', \t// текст вопроса\r\n        questionType: 12,\r\n        answers: [\r\n          {\r\n            answerId: 12,\r\n            value: 'text of answer',  // текст ответа\r\n            answer: true,\r\n            questionId: 12\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    quizId: 0,\r\n    title: 'Title',\r\n    description: 'description',\r\n    quizType: 12,\r\n    creationDate: Date,\r\n    authorId: 12,\r\n    questions: [\r\n      {\r\n        questionId: 12,\r\n        questionText: 'questionText', \t// текст вопроса\r\n        questionType: 12,\r\n        answers: [\r\n          {\r\n            answerId: 12,\r\n            value: 'text of answer',  // текст ответа\r\n            answer: true,\r\n            questionId: 12\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  // \r\n  \r\n\r\n]\r\n    // this.getquiz();\r\n  }\r\n\r\n  getQuiz() {\r\n    // this.quizService.getList().subscribe(quiz => this.quiz = quiz);\r\n  }\r\n\r\n  createQuiz(): void {\r\n  //   const modalRef = this.modalService.open(CreateQuizComponent, { centered: true });\r\n  //   modalRef.closed.pipe(\r\n  //     switchMap(quiz => this.quizService.createOne(quiz))\r\n  //   ).subscribe(() =>\r\n  //     this.getquiz()\r\n  //   );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuizComponent } from './components/quiz.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: QuizComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class QuizRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { QuizRoutingModule } from './quiz-routing.module';\r\nimport { QuizComponent } from './components/quiz.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';  \r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';   \r\nimport localeRu from '@angular/common/locales/ru';\r\n\r\nregisterLocaleData(localeRu, 'ru');\r\n\r\n@NgModule({\r\n  declarations: [QuizComponent],\r\n  imports: [\r\n    CommonModule,\r\n    QuizRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule\r\n  ]\r\n})\r\nexport class QuizModule { }\r\n"],"sourceRoot":"webpack:///"}